//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NexGenMVC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DefaultConnectionEntities : DbContext
    {
        public DefaultConnectionEntities()
            : base("name=DefaultConnectionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<AuditIntervention> AuditInterventions { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<DefaultIntervention> DefaultInterventions { get; set; }
        public virtual DbSet<Intervention> Interventions { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<GetClient_Result> GetClient(string userid, Nullable<int> opt)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(string));
    
            var optParameter = opt.HasValue ?
                new ObjectParameter("opt", opt) :
                new ObjectParameter("opt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClient_Result>("GetClient", useridParameter, optParameter);
        }
    
        public virtual ObjectResult<Fn_GetClint_Result> Fn_GetClient(string userid, Nullable<int> opt)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(string));
    
            var optParameter = opt.HasValue ?
                new ObjectParameter("opt", opt) :
                new ObjectParameter("opt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Fn_GetClint_Result>("Fn_GetClient", useridParameter, optParameter);
        }
    
        public virtual ObjectResult<string> Fn_GetClientId(string userid, Nullable<int> opt)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(string));
    
            var optParameter = opt.HasValue ?
                new ObjectParameter("opt", opt) :
                new ObjectParameter("opt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Fn_GetClientId", useridParameter, optParameter);
        }
    }
}
