@using NexGenMVC.Models;
@model IEnumerable<NexGenMVC.Models.Fn_GetDefaultIntervention_Result1>
@*@model NexGenMVC.Models.Intervention*@

@{
    ViewBag.Title = "NewIntervention";
    Layout = "~/Views/Shared/_SiteEngineerLayoutPage.cshtml";
}

<h2>NewIntervention</h2>
@using (Html.BeginForm("NewIntervention", "SiteEngineer", FormMethod.Post))
    {
        <form id="frmNewIntervention">
            <table class="table table-bordered" style="margin-left: 20px; border-collapse: separate; border-spacing: 8px;">
                <tr>
                    <td style="text-align: right">Intervention Id</td>
                
                    <td style="text-align: left"><input type="text" id="txtInterventionId" name="txtInterventionId" value="@ViewBag.InterventionId" readonly /></td>
                </tr>
                <tr>
                    <td style="text-align: right">Client Id</td>
                    <td>
                        <select id="ddlClientId" name="ddlClientId">
                            @foreach (var item in ViewBag.Clients)
                            {


                                <option>@item.clientId.Trim()</option>
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <td style="text-align: right">Intervention Type</td>
                    <td style="text-align: left">
                        <select id="ddlInterType" name="ddlInterType"  onchange="CostAndHoursValueChanged(this.value)" >
                        <option selected></option>   
                        @foreach (var item in ViewData.Model)
                            {
                 
                        
                        <option >@item.interventionName.Trim()</option>
                            }
                            </select></td>
                            </tr>
                            <tr>
                                <td style="text-align: right">Intervention Hours</td>
                                <td style="text-align: left"><input type="text" id="txtInterventionHours"  name="txtInterventionHours" onchange="ExceedSELimitHours(this.value)"  /></td>
                            </tr>
                            <tr>
                                <td style="text-align: right">Intervention Costs</td>
                                <td style="text-align: left"><input type="text" id="txtInterventionCosts"  name="txtInterventionCosts" onchange="ExceedSELimitCosts(this.value)"  /></td>
                            </tr>
                <tr>
                    <td style="text-align: right">Intervention Status</td>
                    <td style="text-align: left">
                        <select id="ddlStatus" name="ddlStatus">
                            <option>Proposed</option>
                            <option>Approved</option>
                            <option>Completed</option>
                            <option>Cancelled</option>
                        </select>
                    </td>
                </tr>
                            <tr>
                                <td></td>
                                <td><input type="submit" id="NewIntervention" name="NewIntervention" onclick="return validationBeforSubmit()" value="NewIntervention" /></td>
                            </tr>

                        </table>
        </form>
    }

<div>
    @Html.ActionLink("Back to previous page", null, null, null, new { href = Request.UrlReferrer })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


   
<script>
   
    function testforNumber(number)
    {
        
       // var reg = "/^[0-9]+(.[0-9]+)?$/";
        if (!/^[0-9]+(.[0-9]+)?$/.test(number)) {
            alert("Numbers only");
        }
    }
    function validationBeforSubmit()
    {
        var hour = document.getElementById("txtInterventionHours").value;
        var cost = document.getElementById("txtInterventionCosts").value;
        var intervention = document.getElementById("ddlInterType");
        var selectedIntervention = intervention.options[intervention.selectedIndex].text;
        if (selectedIntervention == null || selectedIntervention == "")
        {
            alert("Please select intervention ");
            return false;
        }
        if (hour == null || hour == "") {
            alert("Intervention hours can't be blank");
            
            document.getElementById("txtInterventionHours").focus();
            document.getElementById("txtInterventionHours").value = "";
            return false;
        }
        if (!/^[0-9]+(.[0-9]+)?$/.test(hour)) {
            alert("Numbers only");
            return false;
        }

        if (cost == null || cost == "") {
            alert("Intervention cost can't be blank");
            document.getElementById("txtInterventionCosts").focus();
            document.getElementById("txtInterventionCosts").value = "";
            return false;
        }
        if (!/^[0-9]+(.[0-9]+)?$/.test(cost)) {
            alert("Numbers only");
            return false;
        }

        document.getElementById("ddlStatus").removeAttribute("disabled");
        return true;
    }
    
    function CostAndHoursValueChanged(interventionName)
    {
        var interventions = @Html.Raw(Json.Encode(Model));
        
        for (var i = 0; i < interventions.length; i++)
        {
            var intervention = interventions[i];
           
            if (interventionName == intervention.interventionName.trim())
            {
                document.getElementById("txtInterventionHours").value = intervention.interventionDefaultHours;
                document.getElementById("txtInterventionCosts").value = intervention.interventionDefaultCost;
            }
        }

    }

   
   function ExceedSELimitHours(hour)
   {
       testforNumber(hour);
       if (parseFloat(hour) > parseFloat(@ViewBag.DefaultHours))
        {
           
            document.getElementById("ddlStatus").disabled = true;

        }
      
    }
    function ExceedSELimitCosts(cost)
    {
        testforNumber(cost);
       if (parseFloat(cost) > parseFloat(@ViewBag.DefaultCost))
       {
           document.getElementById("ddlStatus").disabled= true;
       }
    }
</script>