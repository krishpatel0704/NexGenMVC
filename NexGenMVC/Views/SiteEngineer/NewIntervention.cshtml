@model IEnumerable<NexGenMVC.Models.Fn_GetDefaultIntervention_Result1>

@{
    ViewBag.Title = "NewIntervention";
    Layout = "~/Views/Shared/_SiteEngineerLayoutPage.cshtml";
}

<h2>NewIntervention</h2>
@using (Html.BeginForm("NewIntervention", "SiteEngineer", FormMethod.Post))
    {
        <form id="frmNewIntervention">
            <table class="table table-bordered" style="margin-left: 20px; border-collapse: separate; border-spacing: 8px;">
                <tr>
                    <td style="text-align: right">Intervention Id</td>
                
                    <td style="text-align: left"><input type="text" id="txtInterventionId" name="txtInterventionId" /></td>
                </tr>
                <tr>
                    <td style="text-align: right">Client Id</td>
                    <td style="text-align: left"><input type="text" id="txtClientId" name="txtClientId"/></td>
                </tr>
                <tr>
                    <td style="text-align: right">Intervention Type</td>
                    <td style="text-align: left">
                        <select id="ddlInterType" name="ddlInterType">
                            @foreach (var item in ViewData.Model)
                            {
                   
                        
                        <option>@item.interventionName</option>
                            }
                            </select></td>
                            </tr>
                            <tr>
                                <td style="text-align: right">Intervention Hours</td>
                                <td style="text-align: left"><input type="text" id="txtInterventionHours" name="txtInterventionHours" /></td>
                            </tr>
                            <tr>
                                <td style="text-align: right">Intervention Costs</td>
                                <td style="text-align: left"><input type="text" id="txtInterventionCosts" name="txtInterventionCosts" /></td>
                            </tr>
                <tr>
                    <td style="text-align: right">Intervention Status</td>
                    <td style="text-align: left">
                        <select id="ddlStatus" name="ddlStatus">
                            <option>Proposed</option>
                            <option>Approved</option>
                            <option>Completed</option>
                            <option>Cancelled</option>
                        </select>
                    </td>
                </tr>
                            <tr>
                                <td></td>
                                <td><input type="submit" name="btnSubmit" value="NewIntervention" /></td>
                            </tr>

                        </table>
        </form>
    }

@*@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Intervention</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.interventionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.interventionId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.interventionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.clientID, "clientID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("clientID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.clientID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userID, "userID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("userID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.userID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.managerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.managerId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.managerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.interventionHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.interventionHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.interventionHours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.interventionCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.interventionCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.interventionCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.interventionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.interventionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.interventionDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.interventionTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.interventionTypeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.interventionTypeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.district, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.district, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.district, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
